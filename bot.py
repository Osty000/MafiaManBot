import sqlite3
import string
import json
import asyncio
import random
import math
import time, datetime

import nextcord
import config

from io import BytesIO
from nextcord.ext import commands
from nextcord.ext.commands import has_permissions, has_role, guild_only, BucketType
from nextcord.ui import Button, View
from PIL import Image, ImageChops, ImageDraw, ImageFont
from colorama import Fore, init


bot = commands.Bot(command_prefix='.', intents=nextcord.Intents.all())
bot.remove_command('help')

#FROM CONFIG
xp_multiplier = config.xp_multiplier
users_whitelist = config.users_whitelist
c_info = config.c_info
c_secc = config.c_secc
c_warn = config.c_warn
c_ban = config.c_ban


@bot.event
async def on_ready():
    init(autoreset=True)
    print(Fore.GREEN + 'BOT is on')
    await bot.change_presence(activity=nextcord.Activity(type=nextcord.ActivityType.watching, name=".help"))

    global conn, curs
    conn = sqlite3.connect('discordmaf.db')
    curs = conn.cursor()
    if conn:
        init(autoreset=True)
        print(Fore.GREEN + 'Database connected..')
        print(Fore.RESET + ' ')
    else:
        init(autoreset=True)
        print(Fore.RED + 'Database ERROR!!! Restart bot NOW..')


#ADD USERS TO DB
@bot.event
async def on_member_join(member):
    welcome_mess = config.welcome_mess
    await bot.get_channel(713102228000604272).send(f':wave: {member.mention} {random.choice(welcome_mess)}')
    logf = open('interact_logs.txt', 'a', encoding='utf-8')
    logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {member.id} / {member} –≤–æ—à—ë–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n')

    #USERS_PROFILE
    if curs.execute(f' SELECT user_id FROM users_profile WHERE user_id = {member.id}').fetchone() is None:
        curs.execute('INSERT INTO users_profile VALUES(?, ?, ?, ?, ?, ?, ?, ?)',(member.id, 0, 0, 0, 0, 1, 'None', 'None'))
        conn.commit()

    #USERS_BAG
    if curs.execute(f' SELECT user_id FROM users_bag WHERE user_id = {member.id}').fetchone() is None:
        curs.execute('INSERT INTO users_bag VALUES(?, ?, ?)',(member.id, 'No', 'No'))
        conn.commit()
 

#UP LEVEL, XP
@bot.event
async def on_message(message):  
    if not message.author.bot:
        curs.execute(f' UPDATE users_profile SET xp = xp +1 WHERE user_id = {message.author.id}')
        xp = curs.execute(f' SELECT xp FROM users_profile WHERE user_id = {message.author.id}').fetchone()[0]
        lvl = math.sqrt(xp) / xp_multiplier

        if lvl.is_integer():
            curs.execute(f' UPDATE users_profile SET level = ? WHERE user_id = ?', (lvl, message.author.id))

        conn.commit()

    if message.content.startswith('–ª–æ—Ö'):
        await message.channel.send(f'–°–∞–º –ª–æ—Ö! <:pepejuice:966396070353580063> ')

    #BANWORDS
    if {i.lower().translate(str.maketrans('','', string.punctuation)) for i in message.content.split(' ')}\
    .intersection(set(json.load(open('banwords.json')))) != set():
        await message.channel.send(f'{message.author.mention} –±–æ–ª—å—à–µ —Ç–∞–∫–æ–µ —Å–ª–æ–≤–æ –Ω–µ –ø–∏—à–∏!!', delete_after=8)
        await message.delete()
    
    await bot.process_commands(message)


#ERRORS HANDLER
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
       await ctx.send('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.')
       init(autoreset=True)
       logf = open('interact_logs.txt', 'a', encoding='utf-8')
       logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É {str(ctx.message.content)}\n')
    elif isinstance(error, commands.MissingRole):
        await ctx.send('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.')
        init(autoreset=True)
        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–º–∞–Ω–¥—É {str(ctx.message.content)}\n')
    elif isinstance(error, commands.CommandNotFound):
        await ctx.send('–ö–æ–º–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ .help')
    elif isinstance(error, commands.CommandOnCooldown):
        cd_error = error.retry_after/60
        embed = nextcord.Embed(
            color = c_ban)
        embed.add_field(name='–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ...', value=f'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ {cd_error:.2f} –º–∏–Ω—É—Ç <:monkaS:966396341100113981>', inline=False)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)


#-------------------BOT COMMANDS--------------------
#-------------------FOR USERS-----------------------

#PROFILE
def circle(pfp,size = (215,215)):
    
    pfp = pfp.resize(size, Image.Resampling.LANCZOS).convert("RGBA")
    
    bigsize = (pfp.size[0] * 3, pfp.size[1] * 3)
    mask = Image.new('L', bigsize, 0)
    draw = ImageDraw.Draw(mask) 
    draw.ellipse((0, 0) + bigsize, fill=255)
    mask = mask.resize(pfp.size, Image.Resampling.LANCZOS)
    mask = ImageChops.darker(mask, pfp.split()[-1])
    pfp.putalpha(mask)
    return pfp

@guild_only()
@bot.command(aliases=['–ø—Ä–æ—Ñ–∏–ª—å'])
async def profile(ctx, user:nextcord.User=None):
    if not user:
        user = ctx.author
    elif user.bot:
        return await ctx.send('–ù–µ–ª—å–∑—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    name, nick = str(user), user.display_name
    balance = curs.execute(f' SELECT money FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
    level = curs.execute(f' SELECT level FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
    warns = curs.execute(f' SELECT warns FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
    gender = curs.execute(f' SELECT gender FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
    bg = curs.execute(f' SELECT bg FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
    status = curs.execute(f' SELECT status FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
    if gender == 'None':
        gender = '‚Äî'
    if status == 'None':
        status = '‚Äî'

    base = Image.open('profile/profile.png').convert('RGBA')
    background = Image.open(f'profile/backgrounds/bg{bg}.png').convert('RGBA')
    pfp = user.display_avatar
    data = BytesIO(await pfp.read())
    pfp = Image.open(data).convert('RGBA')
    name = f'{name[:14]}..' if len(name)>16 else name
    nick = f'AKA - {nick[:14]}..' if len(nick)>16 else f'AKA - {nick}'
    draw = ImageDraw.Draw(base)
    pfp = circle(pfp,size=(215,215))
    font = ImageFont.truetype('profile/DejaVuSans.ttf',39)
    akafont = ImageFont.truetype('profile/DejaVuSans.ttf',31)
    boxfont = ImageFont.truetype('profile/DejaVuSans.ttf',30)
    draw.text((24, 380), name, font = font)
    draw.text((386, 455), nick, font = akafont)
    draw.text((130, 620), str(balance), anchor="ms", font = boxfont)
    draw.text((555, 620), str(level), anchor="ms", font = boxfont)
    draw.text((124, 765), str(warns), anchor="ms", font = boxfont)
    draw.text((560, 765), gender, anchor="ms", font = boxfont)
    draw.text((202, 858), status, anchor="ls", font = boxfont)
    base.paste(pfp,(241,133),pfp)
    background.paste(base,(0,0),base)
    with BytesIO() as a:
        background.save(a,'PNG')
        a.seek(0)
        await ctx.send(file = nextcord.File(a,'profile.png'))

#GENDER
@guild_only()
@commands.cooldown(1, 172800, BucketType.user)
@bot.command(aliases=['–ø–æ–ª', 'pol'])
async def gender(ctx):
    man = Button(emoji='üë®')
    woman = Button(emoji='üë©')
    view = View()
    view.add_item(man)
    view.add_item(woman)

    embed=nextcord.Embed(
        title = '–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª',
        description = '_–º–µ–Ω—è—Ç—å –ø–æ–ª –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 48 —á–∞—Å–æ–≤_',
        color = c_info)
    embed.timestamp = datetime.datetime.utcnow()
    msg = await ctx.send(embed=embed, view=view)

    async def man_callback(interaction):
        curs.execute(f' UPDATE users_profile SET gender = ? WHERE user_id = ?',('–ú—É–∂—Å–∫–æ–π', ctx.author.id))
        conn.commit()
        embed=nextcord.Embed(
            title = '–£—Å–ø–µ—Ö!',
            description = '–¢–µ–ø–µ—Ä—å –í–∞—à –ø–æ–ª: –ú—É–∂—Å–∫–æ–π',
            color = c_secc)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)
        await msg.delete()

    async def woman_callback(interaction):
        curs.execute(f' UPDATE users_profile SET gender = ? WHERE user_id = ?',('–ñ–µ–Ω—Å–∫–∏–π', ctx.author.id))
        conn.commit()
        embed=nextcord.Embed(
            title = '–£—Å–ø–µ—Ö!',
            description = '–¢–µ–ø–µ—Ä—å –í–∞—à –ø–æ–ª: –ñ–µ–Ω—Å–∫–∏–π',
            color = c_secc)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)
        await msg.delete()

    man.callback = man_callback
    woman.callback = woman_callback

#BALANCE
@guild_only()
@bot.command(aliases=['money', 'bal', '–º–æ–Ω–µ—Ç—ã' ,'–±–∞–ª–∞–Ω—Å'])
async def balance(ctx, user:nextcord.Member=None):
    if not user:
        user = ctx.author
    elif user.bot:
        return await ctx.send('–ù–µ–ª—å–∑—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    money = curs.execute(f' SELECT money FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
    embed=nextcord.Embed(
        title = user.name,
        description = f'–ë–∞–ª–∞–Ω—Å: **{money}**:moneybag:',
        color = c_info)
    embed.timestamp = datetime.datetime.utcnow()
    await ctx.send(embed=embed)

#LEADERBOARD
@guild_only()
@bot.command(aliases = ['lb', '—Ç–æ–ø-–º–æ–Ω–µ—Ç'])
async def leaderboard(ctx):
    top_balance = curs.execute("SELECT user_id, money FROM users_profile ORDER BY money DESC LIMIT 10")
    com = 0
    a=[]
    for i in top_balance:
        user = await bot.fetch_user(i[0])
        com += 1
        a.append(f'#{com} | `{user.name}` - **{i[1]}** :moneybag:')

    ajoin = "\n".join(a)
    embed = nextcord.Embed(title = '–¢–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –º–æ–Ω–µ—Ç–∞–º', description=ajoin, color=c_info)
    await ctx.send(embed=embed)

#TEST
@guild_only()
@bot.command(aliases=['—Ç–µ—Å—Ç'])
async def test(ctx):
    embed = nextcord.Embed(
        title = '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!',
        color = 0x1d241e)
    embed.timestamp = datetime.datetime.utcnow()
    await ctx.send(embed=embed, delete_after=5)
    await ctx.message.delete()

#HELP
@guild_only()
@bot.command(aliases=['–ø–æ–º–æ—â—å', '—Ö—ç–ª–ø'])
async def help(ctx):
    embed = nextcord.Embed(
        title = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ —Å–æ–±—Ä–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–∞—Ö –Ω–∏–∂–µ',
        color = c_info)
    embed.add_field(name='–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞:', value='<#704066250803904562>', inline=False)
    embed.add_field(name='–ù–æ–≤–æ—Å—Ç–∏:', value='\na', inline=False)
    embed.add_field(name='–ö–æ–º–º–∞–Ω–¥—ã –±–æ—Ç–∞:', value='\na', inline=False)
    embed.add_field(name='–í–∞–ª—é—Ç–∞ –∏ —É—Ä–æ–≤–µ–Ω—å:', value='\na', inline=False)
    embed.add_field(name='–°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π:', value='<#704065088268664942>', inline=False)
    embed.set_footer(text='–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞')
    await ctx.send(embed=embed)

#SERVER
@guild_only()
@bot.command(aliases=['—Å–µ—Ä–≤–µ—Ä'])
async def server(ctx):
    embed = nextcord.Embed(
        title = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
        color = c_info)
    embed.add_field(name='–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞', value=ctx.guild.name, inline=False)
    embed.add_field(name='–°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω', value=ctx.guild.created_at.strftime("%A, %d %b, %Y"), inline=False)
    embed.add_field(name='–í—ã –∑–∞—à–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä', value=ctx.author.joined_at.strftime("%A, %d %b, %Y %H:%M"), inline=False)
    embed.add_field(name='–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value=ctx.guild.member_count, inline=False)
    embed.add_field(name='–°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞', value=ctx.guild.owner.mention, inline=False)
    embed.set_thumbnail(url = ctx.guild.icon_url)
    embed.timestamp = datetime.datetime.utcnow()
    await ctx.send(embed=embed)

#–í–û–ü–†–û–°
@guild_only()
@bot.command(aliases=['–≤–æ–ø—Ä–æ—Å', '–∑–∞–¥–∞—Ç—å-–≤–æ–ø—Ä–æ—Å'])
async def question(ctx, *, arg=None):
    answ = ['–î–∞ :thumbsup:', '–ù–µ—Ç :thumbsdown:', '–ù–µ –∑–Ω–∞—é <:smoge:966391681278705715>']
    answ1 = random.choice(answ)
    if arg == None:
        await ctx.send(f'{ctx.author.mention} –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –≤–æ–ø—Ä–æ—Å :thinking:')
    else:
        embed=nextcord.Embed(
            title = '–£—Å–ø–µ—Ö!',
            color = c_secc)
        embed.add_field(name='–í–æ–ø—Ä–æ—Å:', value=arg, inline=False)
        embed.add_field(name='–û—Ç–≤–µ—Ç:', value=answ1, inline=False)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)

#RANDOM
@guild_only()
@bot.command(aliases=['random', '—Ä–∞–Ω–¥–æ–º'])
async def randomm(ctx, n: int = None):
    if n is None:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤')
    else:
        nums = []
        for i in range(1,n+1):
            nums.append(str(i))
        random.shuffle(nums)
    
        await ctx.message.delete()
        a = await ctx.send('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–µ–ª...', delete_after=10)
        time.sleep(3)
        await a.add_reaction('‚úÖ')

        embed = nextcord.Embed(
            color = c_secc)
        embed.add_field(name='–£—Å–ø–µ—Ö!', value=f'{" ".join(nums)}', inline=False)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.author.send(embed=embed)

#DAILY-BONUS
@guild_only()
@commands.cooldown(1, 86400, BucketType.user)
@bot.command(aliases=['daily-bonus', '–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π-–±–æ–Ω—É—Å', '–±–æ–Ω—É—Å', 'bonus'])
async def daily_bonus(ctx):
    bonus = random.randint(40,130)
    curs.execute(f' UPDATE users_profile SET money = money + ? WHERE user_id = ?',(bonus, ctx.author.id))
    conn.commit()

    embed = nextcord.Embed(
        title = '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å!',
        color = c_secc)
    embed.add_field(name=f'–ü–æ–ª—É—á–µ–Ω–æ **{bonus}** :moneybag:', value='–°–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞', inline=False)
    embed.timestamp = datetime.datetime.utcnow()
    await ctx.send(embed=embed)

    logf = open('interact_logs.txt', 'a', encoding='utf-8')
    logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} —Å–æ–±—Ä–∞–ª –¥–Ω–µ–≤–Ω–æ–π –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ {bonus} –º–æ–Ω–µ—Ç\n')

#ACTIVATE PROMOCODE
@guild_only()
@commands.cooldown(1, 1200, BucketType.user)
@bot.command(aliases=['promo', '–ø—Ä–æ–º–æ–∫–æ–¥', '–ø—Ä–æ–º–æ'])
async def promocode(ctx, promo_name: int=None):
    try:
        if promo_name is None:
            await ctx.send('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥')
        else:
            activate = conn.execute(F' SELECT activate FROM promocodes WHERE name = {promo_name} ').fetchone()[0]
            if activate <= 0:
                await ctx.send('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–æ')
            else:
                cmoney = curs.execute(f' SELECT count_money FROM promocodes WHERE name = {promo_name}').fetchone()[0]
                curs.execute(f' UPDATE promocodes SET activate = activate -1 WHERE name = {promo_name}')
                curs.execute(f' UPDATE users_profile SET money = money + ? WHERE user_id = ?',(cmoney, ctx.author.id))
                conn.commit()

                embed = nextcord.Embed(
                    title = '–£—Å–ø–µ—Ö!',
                    color = c_secc)
                embed.add_field(name='–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥:', value=promo_name, inline=False)
                embed.add_field(name='–í—ã –ø–æ–ª—É—á–∏–ª–∏:', value=f'**{cmoney}** :moneybag:', inline=False)
                embed.timestamp = datetime.datetime.utcnow()
                await ctx.send(embed=embed)

                logf = open('interact_logs.txt', 'a', encoding='utf-8')
                logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo_name} –∏ –ø–æ–ª—É—á–∏–ª {cmoney} –º–æ–Ω–µ—Ç\n')
    except:
        await ctx.send('–ü—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏–±–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –µ–≥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω–æ <:sadge:966387808346443886>')
        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏\n')

#STATUS
@guild_only()
@bot.command(aliases=['—Å—Ç–∞—Ç—É—Å'])
async def status(ctx):
    status_buy = curs.execute(f'SELECT status_buy FROM users_bag WHERE user_id = {ctx.author.id}').fetchone()[0]

    if status_buy == 'No':
        embed = nextcord.Embed(title='–û—à–∏–±–∫–∞ ‚ùå', description='–£ –í–∞—Å –Ω–µ –∫—É–ø–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å\n–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–æ–∂–Ω–æ –≤ .shop', color=c_ban)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)
    elif status_buy == 'Yes':
        question = ['–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª–∏–Ω–æ–π –¥–æ 22 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å <#704066250803904562>']

        answers = []

        def check(m):
            return m.author == ctx.author and m.channel == ctx.channel

        for i in question:
            await ctx.send(i) 

            try:
                msg = await bot.wait_for('message', timeout=80.0, check=check)
            except asyncio.TimeoutError:
                await ctx.send('–í—ã –Ω–µ –≤–ø–∏—Å–∞–ª–∏ —Å—Ç–∞—Ç—É—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ –∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ –±—É–¥—å—Ç–µ –±—ã—Å—Ç—Ä–µ–µ')
                return
            else:
                answers.append(msg.content)

        newstatus = answers[0][:22]
        curs.execute('UPDATE users_profile SET status = ? WHERE user_id = ?',(newstatus, ctx.author.id))
        conn.commit()

        embed = nextcord.Embed(
            title='–£—Å–ø–µ—à–Ω–æ!', 
            description=f'–í–∞—à –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:\n{newstatus}',
            color=c_secc)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)

        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ - {newstatus}\n')
    else:
        await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞')
        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –Ω–µ —Å–º–æ–≥ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏\n')

#BACKGROUND
@guild_only()
@bot.command(aliases=['bg','–±–≥'])
async def background(ctx):
    bg_buy = curs.execute(f'SELECT bg_buy FROM users_bag WHERE user_id = {ctx.author.id}').fetchone()[0]

    if bg_buy == 'No':
        embed = nextcord.Embed(title='–û—à–∏–±–∫–∞ ‚ùå', description='–£ –í–∞—Å –Ω–µ –∫—É–ø–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è\n–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–æ–∂–Ω–æ –≤ .shop', color=c_ban)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)
    elif bg_buy == 'Yes':
        question = ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ–Ω—ã –º–æ–∂–Ω–æ –≤ <#713109238968352869>']
        answers = []

        def check(m):
            return m.author == ctx.author and m.channel == ctx.channel

        for i in question:
            embed = nextcord.Embed(title='–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ–Ω –∏ –≤–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä –≤ —á–∞—Ç', 
                description=i, color=0x800080)
            await ctx.send(embed=embed)

            try:
                msg = await bot.wait_for('message', timeout=50.0, check=check)
            except asyncio.TimeoutError:
                await ctx.send('–í—ã –Ω–µ —É—Å–ø–µ–ª–∏ —Å –≤—ã–±–æ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ –∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ –±—É–¥—å—Ç–µ –±—ã—Å—Ç—Ä–µ–µ')
                return
            else:
                answers.append(msg.content)

        try:
            newbg = int(answers[0])
        except:
            await ctx.send('–ß—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω, –Ω—É–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å –µ–≥–æ –Ω–æ–º–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞')
            return

        if newbg <= 0:
            await ctx.send('–¢–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ')
            return
        elif newbg <= 11:
            curs.execute('UPDATE users_profile SET bg = ? WHERE user_id = ?',(newbg, ctx.author.id))
            conn.commit()
        else:
            await ctx.send('–¢–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ')
            return

        embed = nextcord.Embed(
            title='–£—Å–ø–µ—à–Ω–æ!', 
            description=f'–ó–∞–¥–Ω–∏–π —Ñ–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {newbg} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
            color=c_secc)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)
    else:
        await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞')
        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –Ω–µ —Å–º–æ–≥ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏\n')

#SHOP
@guild_only()
@bot.command(aliases=['–º–∞–≥–∞–∑–∏–Ω'])
async def shop(ctx):
    #ITEM PRICE
    statusp = curs.execute("SELECT price FROM shop WHERE name = 'status'").fetchone()[0]
    bgp = curs.execute("SELECT price FROM shop WHERE name = 'bg'").fetchone()[0]
    usermoney = curs.execute(f'SELECT money FROM users_profile WHERE user_id = {ctx.author.id}').fetchone()[0]

    #MAIN PAGE SHOP
    firtsitem = Button(emoji='1Ô∏è‚É£')
    seconditem = Button(emoji='2Ô∏è‚É£')
    view = View()
    view.add_item(firtsitem)
    view.add_item(seconditem)

    #ITEM1 PAGE SHOP
    successfirst = Button(emoji='‚úÖ')
    cancel1 = Button(emoji='‚ùå')
    view2 = View()
    view2.add_item(successfirst)
    view2.add_item(cancel1)

    #ITEM2 PAGE SHOP
    successcesond = Button(emoji='‚úÖ')
    cancel2 = Button(emoji='‚ùå')
    view3 = View()
    view3.add_item(successcesond)
    view3.add_item(cancel2)

    embed = nextcord.Embed(
            title = '–ú–∞–≥–∞–∑–∏–Ω',
            color = c_info)
    embed.add_field(name=f'1. –°—Ç–∞—Ç—É—Å - **{statusp}** :moneybag:', value='_–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ_', inline=False)
    embed.add_field(name=f'2. –ó–∞–¥–Ω–∏–π —Ñ–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è - **{bgp}** :moneybag:', value='_–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–Ω—è—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è_', inline=False)
    msg = await ctx.send(embed=embed, view=view)

    async def firstitem_callback(interaction):
        embed=nextcord.Embed(
            title = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É?',
            color = c_info)
        embed.add_field(name=f'–°—Ç–∞—Ç—É—Å - **{statusp}** :moneybag:', value='_–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ_', inline=False)
        global msgi
        msgi = await ctx.send(embed=embed, view=view2)
        await msg.delete()

    async def seconditem_callback(interaction):
        embed=nextcord.Embed(
            title = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É?',
            color = c_info)
        embed.add_field(name=f'–ó–∞–¥–Ω–∏–π —Ñ–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è - **{bgp}** :moneybag:', value='_–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–Ω—è—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è_', inline=False)
        global msgi
        msgi = await ctx.send(embed=embed, view=view3)
        await msg.delete()

    async def successfirst_callback(interaction):
        if usermoney < statusp:
            await ctx.send('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏')
            await msgi.delete()
        else:
            curs.execute('UPDATE users_profile SET money = money - ? WHERE user_id = ?',(statusp, ctx.author.id))
            curs.execute('UPDATE users_bag SET status_buy = ? WHERE user_id = ?',('Yes', ctx.author.id))
            conn.commit()
            embed=nextcord.Embed(
                title = '–ü–æ–∫—É–ø–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞',
                color = c_secc)
            embed.add_field(name='–¢–µ–ø–µ—Ä—å —É –í–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ñ–∏–ª—è', value='_–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ .—Å—Ç–∞—Ç—É—Å_', inline=False)
            embed.timestamp = datetime.datetime.utcnow()
            await ctx.send(embed=embed)
            await msgi.delete()
        
    async def successsecond_callback(interaction):
        if usermoney < bgp:
            await ctx.send('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏')
            await msgi.delete()
        else:
            curs.execute('UPDATE users_profile SET money = money - ? WHERE user_id = ?',(bgp, ctx.author.id))
            curs.execute('UPDATE users_bag SET bg_buy = ? WHERE user_id = ?',('Yes', ctx.author.id))
            conn.commit()
            embed=nextcord.Embed(
                title = '–ü–æ–∫—É–ø–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞',
                color = c_secc)
            embed.add_field(name='–¢–µ–ø–µ—Ä—å —É –í–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è', value='_–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ .bg_', inline=False)
            embed.timestamp = datetime.datetime.utcnow()
            await ctx.send(embed=embed) 
            await msgi.delete()
        
    async def cancel_callback(interaction):
        embed=nextcord.Embed(
            title = '–û—Ç–º–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ ‚ùå',
            color = c_ban)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)
        await msgi.delete()       

    firtsitem.callback = firstitem_callback
    seconditem.callback = seconditem_callback
    successfirst.callback = successfirst_callback
    successcesond.callback = successsecond_callback
    cancel1.callback = cancel_callback
    cancel2.callback = cancel_callback



#-------------------FOR ADMINS/MODERS-----------------------


#WARN
@guild_only()
@has_permissions(kick_members=True)
@bot.command(aliases=['–≤–∞—Ä–Ω', '–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ'])
async def warn(ctx, user:nextcord.Member = None, *, reason = None):
    if user is None:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
    elif reason is None: 
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è')    
    elif user.bot:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é') 
    else:
        role = nextcord.utils.get(ctx.guild.roles, name="üçÄ")
        if role in user.roles:
            await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø—ã—Ç–∞–ª—Å—è –≤—ã–¥–∞—Ç—å –≤–∞—Ä–Ω - {user.id} / {user} –ø–æ –ø—Ä–∏—á–∏–Ω–µ - {reason}. –ù–æ –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –∫–ª–µ–≤–µ—Ä\n')
        else:
            curs.execute(f' UPDATE users_profile SET warns = warns +1 WHERE user_id = {user.id}')
            warncount = curs.execute(f' SELECT warns FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
            conn.commit()

            embed = nextcord.Embed(
                title = '–£—Å–ø–µ—Ö!',
                color = c_warn)
            embed.add_field(name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value=ctx.author.mention, inline=False)
            embed.add_field(name='–í—ã–¥–∞–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', value=user.mention, inline=False)
            embed.add_field(name='–ü–æ –ø—Ä–∏—á–∏–Ω–µ: ', value=reason, inline=False)
            embed.add_field(name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π', value=warncount, inline=False)
            embed.timestamp = datetime.datetime.utcnow()
            await ctx.send(embed=embed) 

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –≤—ã–¥–∞–ª –≤–∞—Ä–Ω - {user.id} / {user} –ø–æ –ø—Ä–∏—á–∏–Ω–µ - {reason}\n')

#UNWARN
@guild_only()
@has_permissions(kick_members=True)
@bot.command(aliases=['—É–Ω–≤–∞—Ä–Ω'])
async def unwarn(ctx, user:nextcord.Member = None):
    if user is None:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Å–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
    elif user.bot:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')  
    elif user == ctx.author:
        await ctx.send('–ù–µ–ª—å–∑—è —Å–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø—ã—Ç–∞–ª—Å—è —Å–Ω—è—Ç—å –≤–∞—Ä–Ω —É —Å–∞–º–æ–≥–æ —Å–µ–±—è\n')
    else:
        warncount = curs.execute(f' SELECT warns FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
        if warncount == 0:
            await ctx.send('–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 0 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π')

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø—ã—Ç–∞–ª—Å—è —Å–Ω—è—Ç—å –≤–∞—Ä–Ω - {user.id} / {user}. –ù–æ —É –Ω–µ–≥–æ 0 –≤–∞—Ä–Ω–æ–≤\n')  
        else:
            curs.execute(f' UPDATE users_profile SET warns = warns -1 WHERE user_id = {user.id}')
            warncount = curs.execute(f' SELECT warns FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
            conn.commit()

            embed = nextcord.Embed(
                title = '–£—Å–ø–µ—Ö!',
                color = c_warn)
            embed.add_field(name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value=ctx.author.mention, inline=False)
            embed.add_field(name='–°–Ω—è–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', value=user.mention, inline=False)
            embed.add_field(name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π', value=warncount, inline=False)
            embed.timestamp = datetime.datetime.utcnow()
            await ctx.send(embed=embed) 

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} —Å–Ω—è–ª –≤–∞—Ä–Ω - {user.id} / {user}\n')

#KICK
@guild_only()
@has_permissions(kick_members=True)  
@bot.command(aliases=['–∫–∏–∫'])
async def kick(ctx, user:nextcord.Member = None, *, reason = None):
    if user is None:
        await ctx.send('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –≤—ã–≥–Ω–∞—Ç—å')
    elif reason is None:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∫–∏–∫–∞')
    elif user.bot:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')  
    elif user == ctx.author:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è')
    else:
        role = nextcord.utils.get(ctx.guild.roles, name="üçÄ")
        if role in user.roles:
            await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø—ã—Ç–∞–ª—Å—è –∫–∏–∫–Ω—É—Ç—å - {user.id} / {user} –ø–æ –ø—Ä–∏—á–∏–Ω–µ - {reason}. –ù–æ –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –∫–ª–µ–≤–µ—Ä\n')
        else:
            embed = nextcord.Embed(
                title = '–£—Å–ø–µ—Ö!',
                color = c_ban)
            embed.add_field(name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value=ctx.author.mention, inline=False)
            embed.add_field(name='–í—ã–≥–Ω–∞–ª —Å —Å–µ—Ä–≤–µ—Ä–∞', value=user.mention, inline=False)
            embed.add_field(name='–ü–æ –ø—Ä–∏—á–∏–Ω–µ: ', value=reason, inline=False)
            embed.timestamp = datetime.datetime.utcnow()
            await ctx.send(embed=embed) 
            await user.kick(reason=reason)

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –∫–∏–∫–Ω—É–ª - {user.id} / {user} –ø–æ –ø—Ä–∏—á–∏–Ω–µ - {reason}\n')
    
#BAN
@guild_only()
@has_permissions(kick_members=True)
@bot.command(aliases=['–±–∞–Ω'])
async def ban(ctx, user:nextcord.Member = None, *, reason = None):
    if user is None:
        await ctx.send('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å')
    elif reason is None:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–∞–Ω–∞')
    elif user.bot:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')  
    elif user == ctx.author:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è')
    else:
        role = nextcord.utils.get(ctx.guild.roles, name="üçÄ")
        if role in user.roles:
            await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø—ã—Ç–∞–ª—Å—è –∑–∞–±–∞–Ω–∏—Ç—å - {user.id} / {user} –ø–æ –ø—Ä–∏—á–∏–Ω–µ - {reason}. –ù–æ –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –∫–ª–µ–≤–µ—Ä\n')
        else:
            embed = nextcord.Embed(
                title = '–£—Å–ø–µ—Ö!',
                color = c_ban)
            embed.add_field(name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value=ctx.author.mention, inline=False)
            embed.add_field(name='–ó–∞–±–∞–Ω–∏–ª', value=user.mention, inline=False)
            embed.add_field(name='–ü–æ –ø—Ä–∏—á–∏–Ω–µ: ', value=reason, inline=False)
            embed.timestamp = datetime.datetime.utcnow()
            await ctx.send(embed=embed) 
            await user.ban(reason=reason)

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –∑–∞–±–∞–Ω–∏–ª - {user.id} / {user} –ø–æ –ø—Ä–∏—á–∏–Ω–µ - {reason}\n')

#UNBAN
@guild_only()
@bot.command(aliases=['—É–Ω–±–∞–Ω', '—Ä–∞–∑–±–∞–Ω'])
async def unban(ctx):
    await ctx.send('–î–ª—è —Ä–∞–∑–±–∞–Ω–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏') 

    logf = open('interact_logs.txt', 'a', encoding='utf-8')
    logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø–æ–ª—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–±–∞–Ω–µ\n')

#GIVE MONEY
@guild_only()
@has_permissions(administrator=True)
@bot.command(aliases=['–¥–∞—Ç—å-–¥–µ–Ω–µ–≥', '–≤—ã–¥–∞—Ç—å-–¥–µ–Ω–µ–≥', '–¥–∞—Ç—å-–±–∞–ª–∞–Ω—Å', 'give-balance', 'give-money'])
async def give_money(ctx, user:nextcord.Member = None, amount: int = None):
    if user is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É –∂–µ–ª–∞–µ—Ç–µ –≤—ã–¥–∞—Ç—å –¥–µ–Ω–µ–≥')
    elif amount is None or amount <= 0:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ —Å—É–º—É –±–æ–ª—å—à–µ 0')   
    elif user.bot:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –¥–µ–Ω–µ–≥ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    else:
        curs.execute(' UPDATE users_profile SET money = money + ? WHERE user_id = ?', (amount, user.id))
        new_bal = curs.execute(f' SELECT money FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
        conn.commit()

        embed = nextcord.Embed(
            title = '–£—Å–ø–µ—Ö!',
            color = c_secc)
        embed.add_field(name=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name} –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ **{amount}** :moneybag:!',\
        value=f'–¢–µ–ø–µ—Ä—å –±–∞–ª–∞–Ω—Å {user.mention} - {new_bal} :moneybag:', inline=False)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed)

        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –≤—ã–¥–∞–ª - {user.id} / {user} - {amount} –º–æ–Ω–µ—Ç\n')

#TAKE MONEY
@guild_only()
@has_permissions(administrator=True)
@bot.command(aliases=['–∑–∞–±—Ä–∞—Ç—å-–¥–µ–Ω–µ–≥', '–∑–∞–±—Ä–∞—Ç—å-–¥–µ–Ω–µ–≥–∏', '–∑–∞–±—Ä–∞—Ç—å-–±–∞–ª–∞–Ω—Å', 'take-balance', 'take-money'])
async def take_money(ctx, user:nextcord.Member = None, amount: int = None):
    if user is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –¥–µ–Ω–µ–≥–∏')
    elif amount is None or amount <= 0:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ —Å—É–º—É –±–æ–ª—å—à–µ 0')        
    elif user.bot:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    else:
        bal = curs.execute(f' SELECT money FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
        if amount > bal:
            await ctx.send(f'–ù–µ–ª—å–∑—è –∑–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º –µ—Å—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n–ï–≥–æ –±–∞–ª–∞–Ω—Å {bal}')

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø—ã—Ç–∞–ª—Å—è –∑–∞–±—Ä–∞—Ç—å —É - {user.id} / {user} - {amount} –º–æ–Ω–µ—Ç. –ù–æ —É –Ω–µ–≥–æ –≤—Å–µ–≥–æ {bal}\n')
        else:
            curs.execute(' UPDATE users_profile SET money = money - ? WHERE user_id = ?', (amount, user.id))
            new_bal = curs.execute(f' SELECT money FROM users_profile WHERE user_id = {user.id}').fetchone()[0]
            conn.commit()

            embed = nextcord.Embed(
                title = '–£—Å–ø–µ—Ö!',
                color = c_secc)
            embed.add_field(name=f'–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name} –∑–∞–±—Ä–∞–ª–∏ **{amount}** :moneybag:!',\
            value=f'–¢–µ–ø–µ—Ä—å –±–∞–ª–∞–Ω—Å {user.mention} - {new_bal} :moneybag:', inline=False)
            embed.timestamp = datetime.datetime.utcnow()
            await ctx.send(embed=embed) 

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –∑–∞–±—Ä–∞–ª —É - {user.id} / {user} - {amount} –º–æ–Ω–µ—Ç\n')

#CLEAR
@guild_only()
@has_role(970344029780836352)
@bot.command(aliases=['–æ—á–∏—Å—Ç–∫–∞', 'chat-clear'])
async def clear(ctx, count: int=None):
    if count is None:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å')
    else:
        await ctx.channel.purge(limit=count+1)
        embed = nextcord.Embed(
            title = '–£—Å–ø–µ—Ö!',
            description=f'–ë—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π',
            color = c_secc)
        embed.timestamp = datetime.datetime.utcnow()
        await ctx.send(embed=embed, delete_after=3)

#BOT-STATUS
@guild_only()
@has_role(970344029780836352)
@bot.command(aliases=['presens', '–ø—Ä–µ—Å–µ–Ω—Å', '–±–æ—Ç-—Å—Ç–∞—Ç—É—Å', 'bot-status'])
async def bot_status(ctx, newst=None):
    if newst is None:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞')
    else:
        await bot.change_presence(activity=nextcord.Activity(type=nextcord.ActivityType.watching, name=newst))
        embed = nextcord.Embed(title='–£—Å–ø–µ—Ö!',
        color=c_secc,
        description=f'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å - –°–º–æ—Ç—Ä–∏—Ç {newst}')
        await ctx.send(embed=embed)

        logf = open('interact_logs.txt', 'a', encoding='utf-8')
        logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –Ω–∞ - {newst}\n')

#CREATE-PROMOCODE
@guild_only()
@has_permissions(administrator=True)
@bot.command(aliases=['create-promocode', 'create-promo', '—Å–æ–∑–¥–∞—Ç—å-–ø—Ä–æ–º–æ–∫–æ–¥'])
async def create_promocode(ctx, count_money: int=None, activate: int=None):
    if count_money is None:
        await ctx.send('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .create-promocode <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π>')
    elif activate is None:
        await ctx.send('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .create-promocode <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π>')   
    else:
        try:
            promo_name = random.randint(10000000, 99999999)
            curs.execute('INSERT INTO promocodes VALUES(?, ?, ?)',(promo_name, count_money, activate))
            conn.commit()
            await ctx.message.add_reaction('‚úÖ')
            await ctx.author.send(f'–ü—Ä–æ–º–æ–∫–æ–¥ —Å–æ–∑–¥–∞–Ω - {promo_name}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π - {activate}')

            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} —Å–æ–∑–¥–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo_name}\n')
        except:
            await ctx.send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ <:sadge:966387808346443886>')
            logf = open('interact_logs.txt', 'a', encoding='utf-8')
            logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –Ω–µ —Å–º–æ–≥ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏\n')

#PROMOCODE-LIST
@guild_only()
@has_permissions(administrator=True)
@bot.command(aliases=['promo-list', 'promocode-list', 'plist', '—Å–ø–∏—Å–æ–∫-–ø—Ä–æ–º–æ', '—Å–ø–∏—Å–æ–∫-–ø—Ä–æ–º–æ–∫–æ–¥–æ–≤'])
async def promo_list(ctx):
    embed = nextcord.Embed(title = '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤')
    for i in curs.execute(f' SELECT name, count_money, activate FROM promocodes'):
        embed.add_field(
            name=i[0],
            value=f'–¥–µ–Ω–µ–≥ –∑–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é - {i[1]}; –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è - {i[2]}',
            inline=False)
    await ctx.message.add_reaction('‚úÖ')
    await ctx.author.send(embed=embed)

    logf = open('interact_logs.txt', 'a', encoding='utf-8')
    logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} –ø–æ–ª—É—á–∏–ª —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤\n')

#GIVEAWAY
def convert(time):
    pos = ['s','m','h','d']
    time_dict = {'s' : 1, 'm' : 60, 'h' : 3600, 'd' : 3600*24}
    unit = time[-1]

    if unit not in pos:
        return -1
    try:
        val = int(time[:-1])
    except:
        return -2
    
    return val * time_dict[unit]


@guild_only()
@has_role(970344029780836352)
@bot.command(aliases=['–≥–∏–≤', '—Ä–æ–∑—ã–≥—Ä—ã—à'])
async def giveaway(ctx):
    await ctx.send('–°–æ–∑–¥–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞...')

    question = ['–í –∫–∞–∫–æ–º –∫–∞–Ω–∞–ª–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à',
                '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω –±—É–¥–µ—Ç –¥–ª–∏—Ç—Å—è? (s|m|h|d)',
                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ :moneybag: –≤ –ø—Ä–∏–∑–µ?']

    answers = []

    def check(m):
        return m.author == ctx.author and m.channel == ctx.channel

    for i in question:
        await ctx.send(i)

        try:
            msg = await bot.wait_for('message', timeout=20.0, check=check)
        except asyncio.TimeoutError:
            await ctx.send('‚ùå –í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –≤–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            return
        else:
            answers.append(msg.content)

    try:
        c_id = int(answers[0][2:-1])
    except:
        await ctx.send(f'–í—ã –¥–æ–ª–∂–Ω—ã —É–ø–æ–º—è–Ω—É—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞. –ü—Ä–∏–º–µ—Ä {ctx.channel.mention}')
    channel = bot.get_channel(c_id)

    time = convert(answers[1])
    if time == -1:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—è s|m|h|d')
        return
    elif time == -2:
        await ctx.send('–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—è s|m|h|d')
        return
    prize = answers[2]

    await ctx.send(f'–†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–æ–π–¥–µ—Ç –≤ –∫–∞–Ω–∞–ª–µ {channel.mention} —Å –ø—Ä–∏–∑–æ–º {prize} –∏ –ø—Ä–æ–¥–ª–∏—Ç—Å—è {answers[1]}')
    embed = nextcord.Embed(
        title='–†–æ–∑—ã–≥—Ä—ã—à!', 
        description=f'–ü—Ä–∏–∑ - **{prize}** :moneybag:',
        color=0xe4f312)
    embed.set_footer(text=f'–ü—Ä–æ–¥–ª–∏—Ç—Å—è {answers[1]}')
    await channel.send('@here')
    my_msg = await channel.send(embed=embed)
    await my_msg.add_reaction('üéâ')

    logf = open('interact_logs.txt', 'a', encoding='utf-8')
    logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {ctx.author.id} / {ctx.author} —Å–æ–∑–¥–∞–ª –≥–∏–≤ –≤ –∫–∞–Ω–∞–ª–µ {channel.id} —Å –ø—Ä–∏–∑–æ–º {prize} –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–¥–ª–∏—Ç—Å—è {answers[1]}\n')

    await asyncio.sleep(time)

    new_msg = await channel.fetch_message(my_msg.id)
    users = await new_msg.reactions[0].users().flatten()
    users.pop(users.index(bot.user))

    winner = random.choice(users)
    curs.execute('UPDATE users_profile SET money = money + ? WHERE user_id = ?',(prize, winner.id))
    conn.commit()
    await channel.send(f'{winner.mention} - –ø–æ–±–µ–¥–∏—Ç–µ–ª—å —Ä–æ–∑—ã–≥—Ä—ã—à–∞. –û–Ω –ø–æ–ª—É—á–∞–µ—Ç **{prize}** :moneybag:')

    logf = open('interact_logs.txt', 'a', encoding='utf-8')
    logf.write(f'{datetime.datetime.now().strftime("%d/%m/%Y, %H:%M")} _ {winner.id} / {winner} –ø–æ–±–µ–¥–∏–ª –≤ –≥–∏–≤–µ –∏ –ø–æ–ª—É—á–∏–ª {prize} –º–æ–Ω–µ—Ç\n')


















        



if __name__ == "__main__":
    bot.run(config.TOKEN)